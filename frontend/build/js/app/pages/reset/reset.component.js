"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResetComponent=void 0;var _dec,_class,_common=require("@angular/common"),_core=require("@angular/core"),_forms=require("@angular/forms");let ResetComponent=exports.ResetComponent=(_dec=(0,_core.Component)({selector:"app-reset",standalone:!0,imports:[_common.CommonModule,_forms.ReactiveFormsModule],templateUrl: '../../html/app/pages/reset.component.html',styleUrl: '../../css/app/pages/reset.component.css'}))(_class=class{constructor(t,o,s,e){this.route=t,this.httpClient=o,this.toastr=s,this.router=e,this.token=void 0,this.resetForm=new _forms.FormGroup({password:new _forms.FormControl("",_forms.Validators.required),passwordConfirm:new _forms.FormControl("",_forms.Validators.required)},{validators:this.passwordMatchValidator,updateOn:"blur"}),this.onSubmit=()=>{if(this.resetForm.valid){const t={password:this.resetForm.value.password,token:this.token};this.httpClient.post("http://localhost:5000/api/auth/newPassword",t).subscribe({next:t=>{this.toastr.success(t),this.router.navigate(["/login"])},error:t=>{this.toastr.error(t)}})}}}ngOnInit(){this.token=this.route.snapshot.paramMap.get("token")}passwordMatchValidator(t){const o=t.get("password")?.value,s=t.get("passwordConfirm")?.value;return o===s?null:{passwordsMismatch:!0}}})||_class;