"use strict";var _testing=require("@angular/core/testing"),_account=require("./account.component"),_core=require("@ng-icons/core"),_testing2=require("@ngrx/store/testing"),_ngxToastr=require("ngx-toastr"),_auth=require("../../services_interceptors/auth.service"),_userMessage=require("../../store/selectors/userMessage.selector"),_adminMessage=require("../../store/selectors/adminMessage.selector"),_forum=require("../../store/selectors/forum.selectors"),_router=require("@angular/router"),_common=require("@angular/common"),_usermessage=require("../../store/actions/usermessage.actions"),_blogmember=require("../../store/actions/blogmember.actions");describe("AccountComponent",(()=>{let e,t,n,r,o,a,s,c,l,u,i,m,d,g,h,E,p,y;beforeEach((async()=>{const v={user$:{id:1,username:"RomanArmin",vorname:"Roman",nachname:"Rostock",is_admin:!0},getUser:jasmine.createSpy("getUser").and.returnValue({id:1,username:"RomanArmin",vorname:"Roman",nachname:"Rostock",is_admin:!0})},b={snapshot:{paramMap:{get:jasmine.createSpy().and.returnValue("1")}}};await _testing.TestBed.configureTestingModule({imports:[_account.AccountComponent,_core.NgIconsModule],providers:[(0,_core.provideIcons)({}),(0,_testing2.provideMockStore)(),(0,_ngxToastr.provideToastr)(),{provide:_auth.AuthService,useValue:v},{provide:_router.ActivatedRoute,useValue:b}]}).compileComponents(),t=_testing.TestBed.createComponent(_account.AccountComponent),e=t.componentInstance,n=_testing.TestBed.inject(_auth.AuthService),r=_testing.TestBed.inject(_common.Location),a=_testing.TestBed.inject(_testing2.MockStore),o=_testing.TestBed.inject(_ngxToastr.ToastrService),s=a.overrideSelector(_userMessage.selectAllUserMessageData,[]),c=a.overrideSelector(_userMessage.selectUserMessageLoading,!1),l=a.overrideSelector(_userMessage.selectUserMessageError,!1),u=a.overrideSelector(_userMessage.selectUserMessageMessage,""),i=a.overrideSelector(_adminMessage.selectUserAdminMessage,[]),m=a.overrideSelector(_adminMessage.selectAdminMessageLoading,!1),d=a.overrideSelector(_adminMessage.selectAdminMessageError,!1),g=a.overrideSelector(_adminMessage.selectAdminMessageMessage,""),h=a.overrideSelector(_forum.selectAllUserQuestions,[]),E=a.overrideSelector(_forum.selectForumLoading,!1),p=a.overrideSelector(_forum.selectForumError,!1),y=a.overrideSelector(_forum.selectForumMessage,""),t.detectChanges()})),it("should create",(()=>{expect(e).toBeTruthy()})),it("should greet the user",(()=>{const e=t.debugElement.nativeElement.querySelector(".greeting"),n=t.debugElement.nativeElement.querySelector(".hallo");expect(e).toBeTruthy(),expect(n.textContent.trim()).toEqual("Hallo RomanArmin")})),it("backButton should work",(()=>{const e=spyOn(r,"back"),n=t.debugElement.nativeElement.querySelector(".goBack");expect(n).toBeTruthy(),n.click(),t.detectChanges(),expect(e).toHaveBeenCalled()})),it("should have adminMessages",(async()=>{i.setResult([{id:1,adminname:"RomanArmin",admin_id:1,message:"Lorem Ipsum Ad Dolores",username:"RomanArmin",user_id:1,usermessage_id:1,created_at:new Date("2023-11-27T10:00:00Z")}]),a.refreshState(),t.detectChanges(),await t.whenStable().then((()=>{const e=t.debugElement.nativeElement.querySelector(".adminMessages"),n=t.debugElement.nativeElement.querySelector(".userGreeting"),r=t.debugElement.nativeElement.querySelector(".nachricht"),o=t.debugElement.nativeElement.querySelector(".adminname");expect(e).toBeTruthy(),expect(n.textContent.trim()).toEqual("Hallo RomanArmin,"),expect(r.textContent.trim()).toEqual("Lorem Ipsum Ad Dolores"),expect(o.textContent.trim()).toEqual("GruÃŸ RomanArmin")}))})),it("should have no adminMessages",(()=>{const e=t.debugElement.nativeElement.querySelector(".noMessage");expect(e).toBeTruthy(),expect(e.textContent.trim()).toEqual("Sie haben derzeit keine Nachrichten")})),it("userQuestion should work on button click",(async()=>{const n=spyOn(a,"dispatch"),r=t.debugElement.nativeElement.querySelector(".accountManagement");expect(r).toBeTruthy(),expect(r.textContent.trim()).toEqual("Nachrichten an den Admin & Delete"),r.click(),t.detectChanges(),await t.whenStable().then((async()=>{const r=t.debugElement.nativeElement.querySelector(".accountModule"),o=t.debugElement.nativeElement.querySelector(".accountButtons"),a=t.debugElement.nativeElement.querySelector(".message"),s=t.debugElement.nativeElement.querySelector(".closeModule"),c=t.debugElement.nativeElement.querySelector(".warn");expect(r).toBeTruthy(),expect(o).toBeTruthy(),expect(a).toBeTruthy(),expect(s).toBeTruthy(),expect(c).toBeTruthy(),a.click(),t.detectChanges(),await t.whenStable().then((()=>{const r=t.debugElement.nativeElement.querySelector(".messageModule");expect(r).toBeTruthy();t.debugElement.nativeElement.querySelector(".userMessageForm"),t.debugElement.nativeElement.querySelector("#message");const o=t.debugElement.nativeElement.querySelector(".mainButton");e.usermessageForm.controls.message.setValue("Eine Nachricht an den Admin"),o.click(),t.detectChanges(),expect(n).toHaveBeenCalledWith((0,_usermessage.createUserMessage)({userMessageData:{username:"RomanArmin",user_id:parseInt(e.id),message:"Eine Nachricht an den Admin"}}))}))}))})),it("test the closeModule",(async()=>{const e=t.debugElement.nativeElement.querySelector(".accountManagement");expect(e).toBeTruthy(),e.click(),t.detectChanges(),await t.whenStable();const n=t.debugElement.nativeElement.querySelector(".closeModule");expect(n).toBeTruthy(),n.click(),t.detectChanges(),await t.whenStable().then((()=>{const e=t.debugElement.nativeElement.querySelector(".accountModule"),n=t.debugElement.nativeElement.querySelector(".accountButtons"),r=t.debugElement.nativeElement.querySelector(".message"),o=t.debugElement.nativeElement.querySelector(".closeModule"),a=t.debugElement.nativeElement.querySelector(".warn");expect(e).toBeFalsy(),expect(n).toBeFalsy(),expect(r).toBeFalsy(),expect(o).toBeFalsy(),expect(a).toBeFalsy()}))})),it("user should be able to delete his account",(async()=>{const n=spyOn(a,"dispatch"),r=t.debugElement.nativeElement.querySelector(".accountManagement");expect(r).toBeTruthy(),expect(r.textContent.trim()).toEqual("Nachrichten an den Admin & Delete"),r.click(),t.detectChanges(),await t.whenStable().then((async()=>{const r=t.debugElement.nativeElement.querySelector(".accountModule"),o=t.debugElement.nativeElement.querySelector(".accountButtons"),a=t.debugElement.nativeElement.querySelector(".warn");expect(r).toBeTruthy(),expect(o).toBeTruthy(),expect(a).toBeTruthy(),a.click(),t.detectChanges(),await t.whenStable().then((()=>{const r=t.debugElement.nativeElement.querySelector(".warning");expect(r).toBeTruthy();t.debugElement.nativeElement.querySelector(".delete").click(),t.detectChanges(),expect(n).toHaveBeenCalledWith((0,_blogmember.deleteBlogmember)({id:parseInt(e.id)}))}))}))})),it("should see his questions",(async()=>{h.setResult([{id:1,username:"RomanArmin",user_id:1,is_admin:!0,question_ressort:"HTML",question_theme:"Irgendein Thema",question:"Lorem Ipsum Ad Dolores",likes:0,dislikes:0,solved:!1,views:0}]),a.refreshState(),t.detectChanges(),await t.whenStable().then((()=>{const e=t.debugElement.nativeElement.querySelector(".theme"),n=t.debugElement.nativeElement.querySelector(".question"),r=t.debugElement.nativeElement.querySelector(".counter");expect(e).toBeTruthy(),expect(n).toBeTruthy(),expect(r).toBeTruthy(),expect(e.textContent.trim()).toEqual("Irgendein Thema"),expect(n.textContent.trim()).toEqual("Lorem Ipsum Ad Dolores"),expect(r.textContent.trim()).toEqual("0")}))})),it("should be able to update his data",(async()=>{const n=spyOn(a,"dispatch"),r=t.debugElement.nativeElement.querySelector(".updateUserForm"),o=(t.debugElement.nativeElement.querySelector("#vorname"),t.debugElement.nativeElement.querySelector("#nachname"),t.debugElement.nativeElement.querySelector(".mainButton"));expect(r).toBeTruthy(),e.updateUserForm.controls.vorname.setValue("Roman Armin"),o.click(),t.detectChanges(),await t.whenStable(),expect(n).toHaveBeenCalledWith((0,_blogmember.updateBlogmember)({id:parseInt(e.id),blogmemberData:{vorname:"Roman Armin",nachname:"Rostock"}}))}))}));