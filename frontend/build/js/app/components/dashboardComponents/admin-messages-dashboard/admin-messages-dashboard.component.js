"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AdminMessagesDashboardComponent=void 0;var _dec,_class,_core=require("@angular/core"),_rxjs=require("rxjs"),_adminMessage=require("../../../store/selectors/adminMessage.selector"),_adminmessage=require("../../../store/actions/adminmessage.actions"),_blogmember=require("../../../store/selectors/blogmember.selector"),_userMessage=require("../../../store/selectors/userMessage.selector"),_usermessage=require("../../../store/actions/usermessage.actions"),_blogmember2=require("../../../store/actions/blogmember.actions"),_forms=require("@angular/forms"),_common=require("@angular/common"),_core2=require("@ng-icons/core"),_adminMessagesEdit=require("../editForms/admin-messages-edit/admin-messages-edit.component");let AdminMessagesDashboardComponent=exports.AdminMessagesDashboardComponent=(_dec=(0,_core.Component)({selector:"app-admin-messages-dashboard",standalone:!0,imports:[_common.CommonModule,_forms.ReactiveFormsModule,_core2.NgIconsModule,_adminMessagesEdit.AdminMessagesEditComponent],templateUrl: '../../html/app/pages/admin-messages-dashboard.component.html',styleUrl: '../../css/app/pages/admin-messages-dashboard.component.css',providers:[_common.DatePipe]}))(_class=class{constructor(e,s,r,t){this.toastr=e,this.store=s,this.datePipe=r,this.authService=t,this.user=this.authService.getUser(),this.allAdminmessages$=this.store.select(_adminMessage.selectAllAdminMessageData),this.isLoading$=this.store.select(_adminMessage.selectAdminMessageLoading),this.isError$=this.store.select(_adminMessage.selectAdminMessageError),this.message$=this.store.select(_adminMessage.selectAdminMessageMessage),this.allBlogmembers$=this.store.select(_blogmember.selectAllBlogmemberData),this.isBlogmemberLoading$=this.store.select(_blogmember.selectBlogmemberLoading),this.isBlogmemberError$=this.store.select(_blogmember.selectBlogmemberError),this.messageBlogmember$=this.store.select(_blogmember.selectBlogmemberMessage),this.allUsermessages$=this.store.select(_userMessage.selectAllUserMessageData),this.isUsermessageLoading$=this.store.select(_userMessage.selectUserMessageLoading),this.isUsermessageError$=this.store.select(_userMessage.selectUserMessageError),this.messageUsermessage$=this.store.select(_userMessage.selectUserMessageMessage),this.sortedBlogmembers$=void 0,this.allBlogMember=!1,this.handleOpenBlogmembers=()=>{this.allBlogMember?this.allBlogMember=!1:this.allBlogMember=!0},this.handleAnswer=(e,s,r)=>{this.adminMessageForm.get("username")?.setValue(e),this.adminMessageForm.get("user_id")?.setValue(s),this.adminMessageForm.get("usermessage_id")?.setValue(r)},this.handleMessage=(e,s)=>{this.adminMessageForm.get("username")?.setValue(s),this.adminMessageForm.get("user_id")?.setValue(e)},this.adminMessageForm=new _forms.FormGroup({message:new _forms.FormControl("",_forms.Validators.required),username:new _forms.FormControl("",_forms.Validators.required),user_id:new _forms.FormControl(null,_forms.Validators.required),usermessage_id:new _forms.FormControl(null)}),this.onSubmit=()=>{const{message:e,username:s,user_id:r,usermessage_id:t}=this.adminMessageForm.value,a={adminname:this.user&&this.user.username,admin_id:this.user&&this.user.id,message:e,username:s,user_id:r,usermessage_id:t};this.store.dispatch((0,_adminmessage.createAdminMessage)({adminMessageData:a})),this.adminMessageForm.reset()},this.handleQuestionDelete=e=>{this.store.dispatch((0,_usermessage.deleteUserMessage)({id:e}))},this.handleMessageDelete=e=>{this.store.dispatch((0,_adminmessage.deleteAdminMessage)({id:e}))},this.editModule=!1,this.editData=null,this.handleMessageEdit=e=>{this.editModule=!0,this.editData=e},this.handleClose=()=>{this.editModule=!1}}ngOnInit(){(0,_rxjs.combineLatest)([this.isError$,this.isBlogmemberError$,this.isUsermessageError$]).subscribe((([e,s,r])=>{e?this.message$.subscribe((e=>{this.toastr.error(e)})):(s||r)&&this.messageBlogmember$.subscribe((e=>{this.toastr.error(e)}))})),this.store.dispatch((0,_adminmessage.getAllAdminMessage)()),this.store.dispatch((0,_usermessage.getAllUserMessage)()),this.store.dispatch((0,_blogmember2.getAllBlogmember)()),this.sortedBlogmembers$=this.allBlogmembers$.pipe((0,_rxjs.map)((e=>[...e].sort(((e,s)=>e.username>s.username?1:-1)))))}})||_class;