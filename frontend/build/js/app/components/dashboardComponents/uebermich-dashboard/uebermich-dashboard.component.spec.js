"use strict";var _testing=require("@angular/core/testing"),_uebermichDashboard=require("./uebermich-dashboard.component"),_testing2=require("@ngrx/store/testing"),_core=require("@ng-icons/core"),_uebermich=require("../../../store/selectors/uebermich.selectors"),_ngxToastr=require("ngx-toastr"),_uebermich2=require("../../../store/actions/uebermich.actions"),_outline=require("@ng-icons/material-icons/outline");describe("UebermichDashboardComponent",(()=>{let e,t,r,n,o,c,i,s;beforeEach((async()=>{await _testing.TestBed.configureTestingModule({imports:[_uebermichDashboard.UebermichDashboardComponent,_core.NgIconsModule],providers:[(0,_core.provideIcons)({matEditOutline:_outline.matEditOutline,matDeleteOutline:_outline.matDeleteOutline}),(0,_testing2.provideMockStore)(),(0,_ngxToastr.provideToastr)()]}).compileComponents(),t=_testing.TestBed.createComponent(_uebermichDashboard.UebermichDashboardComponent),e=t.componentInstance,r=_testing.TestBed.inject(_testing2.MockStore),n=r.overrideSelector(_uebermich.selectAllUebermichData,[]),o=r.overrideSelector(_uebermich.selectUebermichLoading,!1),c=r.overrideSelector(_uebermich.selectUebermichError,!1),i=r.overrideSelector(_uebermich.selectUebermichMessage,""),s=_testing.TestBed.inject(_ngxToastr.ToastrService),t.detectChanges()})),it("should create",(()=>{expect(e).toBeTruthy()})),it("should have all its components",(async()=>{n.setResult([{id:1,my_person:"Lorem Ipsum"}]),r.refreshState(),t.detectChanges(),await t.whenStable();const e=t.debugElement.nativeElement.querySelector(".content"),o=t.debugElement.nativeElement.querySelector(".title"),c=t.debugElement.nativeElement.querySelector(".uebermichForm"),i=t.debugElement.nativeElement.querySelector("#my_person"),s=t.debugElement.nativeElement.querySelector(".mainButton");expect(e).toBeTruthy(),expect(o).toBeTruthy(),expect(c).toBeTruthy(),expect(i).toBeTruthy(),expect(s).toBeTruthy(),expect(e.textContent.trim()).toEqual("Lorem Ipsum"),expect(o.textContent.trim()).toEqual("Uebermich Daten einpflegen")})),it("form should get values and send them",(()=>{const n=spyOn(r,"dispatch"),o=(t.debugElement.nativeElement.querySelector(".uebermichForm"),t.debugElement.nativeElement.querySelector("#my_person")),c=t.debugElement.nativeElement.querySelector(".mainButton");e.uebermichForm.controls.my_person.setValue("Lorem Ipsum Ad Dolores"),expect(o.value).toEqual("Lorem Ipsum Ad Dolores"),t.detectChanges(),c.click(),expect(n).toHaveBeenCalledWith((0,_uebermich2.createUebermich)({uebermichData:{my_person:"Lorem Ipsum Ad Dolores"}}))})),it("should open edit Form on click",(async()=>{const e=spyOn(r,"dispatch");n.setResult([{id:1,my_person:"Lorem Ipsum"}]),r.refreshState(),t.detectChanges(),await t.whenStable();const o=t.debugElement.nativeElement.querySelector("#edit");expect(o).toBeTruthy(),o.click(),t.detectChanges(),await t.whenStable().then((()=>{const r=t.debugElement.nativeElement.querySelector(".title");expect(r.textContent.trim()).toEqual("Uebermich Daten updaten");const n=t.debugElement.nativeElement.querySelector(".editUebermichForm");expect(n).toBeTruthy();const o=t.debugElement.nativeElement.querySelector(".input");expect(o).toBeTruthy(),expect(o.value).toEqual("Lorem Ipsum");t.debugElement.nativeElement.querySelector(".mainButton").click(),t.detectChanges(),expect(e).toHaveBeenCalledWith((0,_uebermich2.updateUebermich)({uebermichData:{id:1,my_person:"Lorem Ipsum"}}))}))})),it("should delete on click",(async()=>{n.setResult([{id:1,my_person:"Lorem Ipsum"}]),r.refreshState(),t.detectChanges(),await t.whenStable();const e=spyOn(r,"dispatch"),o=t.debugElement.nativeElement.querySelector("#delete");expect(o).toBeTruthy(),o.click(),expect(e).toHaveBeenCalledWith((0,_uebermich2.deleteUebermich)({id:1}))}))}));