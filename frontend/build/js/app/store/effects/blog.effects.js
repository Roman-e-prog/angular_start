"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BlogEffect=void 0;var _dec,_class,_core=require("@angular/core"),_effects=require("@ngrx/effects"),_environment=require("../../environments/environment"),_blog=require("../actions/blog.actions"),_rxjs=require("rxjs");let BlogEffect=exports.BlogEffect=(_dec=(0,_core.Injectable)())(_class=class{constructor(e,t,r){this.store=e,this.actions$=t,this.httpClient=r,this.api_url=`${_environment.environment.apiURL}api/blog/`,this.createBlog$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_blog.createBlog),(0,_rxjs.mergeMap)((e=>this.httpClient.post(this.api_url,e.blogData).pipe((0,_rxjs.map)((e=>(this.store.dispatch((0,_blog.getAllBlog)()),(0,_blog.createBlogSuccess)({blogData:e})))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_blog.createBlogError)({error:e})))))))))),this.updateBlog$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_blog.updateBlog),(0,_rxjs.mergeMap)((e=>this.httpClient.put(this.api_url+e.id,e.blogData).pipe((0,_rxjs.map)((e=>(this.store.dispatch((0,_blog.getAllBlog)()),(0,_blog.updateBlogSuccess)({blogData:e})))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_blog.updateBlogError)({error:e})))))))))),this.deleteBlog$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_blog.deleteBlog),(0,_rxjs.mergeMap)((e=>this.httpClient.delete(this.api_url+e.id).pipe((0,_rxjs.map)((t=>(this.store.dispatch((0,_blog.getAllBlog)()),(0,_blog.deleteBlogSuccess)({id:e.id})))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_blog.deleteBlogError)({error:e})))))))))),this.getBlog$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_blog.getBlog),(0,_rxjs.mergeMap)((e=>this.httpClient.get(this.api_url+"find/"+e.id).pipe((0,_rxjs.map)((e=>(0,_blog.getBlogSuccess)({blogData:e}))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_blog.getBlogError)({error:e})))))))))),this.getAllBlog$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_blog.getAllBlog),(0,_rxjs.mergeMap)((e=>this.httpClient.get(this.api_url+"find/").pipe((0,_rxjs.map)((e=>(0,_blog.getAllBlogSuccess)({data:e}))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_blog.getAllBlogError)({error:e}))))))))))}})||_class;