"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BibliothekEffect=void 0;var _dec,_class,_core=require("@angular/core"),_effects=require("@ngrx/effects"),_environment=require("../../environments/environment"),_bibliothek=require("../actions/bibliothek.actions"),_rxjs=require("rxjs");let BibliothekEffect=exports.BibliothekEffect=(_dec=(0,_core.Injectable)())(_class=class{constructor(e,t,i){this.store=e,this.actions$=t,this.httpClient=i,this.api_url=`${_environment.environment.apiURL}api/bibliothek/`,this.createBibliothek$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_bibliothek.createBibliothek),(0,_rxjs.mergeMap)((e=>this.httpClient.post(this.api_url,e.bibliothekData).pipe((0,_rxjs.map)((e=>(console.log(e,"create"),this.store.dispatch((0,_bibliothek.getAllBibliothek)()),(0,_bibliothek.createBibliothekSuccess)({bibliothekData:e})))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_bibliothek.createBibliothekError)({error:e})))))))))),this.updateBibliothek$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_bibliothek.updateBibliothek),(0,_rxjs.mergeMap)((e=>this.httpClient.put(this.api_url+e.id,e.bibliothekData).pipe((0,_rxjs.map)((e=>(console.log(e,"update"),this.store.dispatch((0,_bibliothek.getAllBibliothek)()),(0,_bibliothek.updateBibliothekSuccess)({bibliothekData:e})))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_bibliothek.updateBibliothekError)({error:e})))))))))),this.deleteBibliothek$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_bibliothek.deleteBibliothek),(0,_rxjs.mergeMap)((e=>this.httpClient.delete(this.api_url+e.id).pipe((0,_rxjs.map)((t=>(console.log("delete"),this.store.dispatch((0,_bibliothek.getAllBibliothek)()),(0,_bibliothek.deleteBibliothekSuccess)({id:e.id})))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_bibliothek.deleteBibliothekError)({error:e})))))))))),this.getBibliothek$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_bibliothek.getBibliothek),(0,_rxjs.mergeMap)((e=>this.httpClient.get(this.api_url+"find/"+e.id).pipe((0,_rxjs.map)((e=>(0,_bibliothek.getBibliothekSuccess)({bibliothekData:e}))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_bibliothek.getBibliothekError)({error:e})))))))))),this.getAllBibliothek$=(0,_effects.createEffect)((()=>this.actions$.pipe((0,_effects.ofType)(_bibliothek.getAllBibliothek),(0,_rxjs.mergeMap)((e=>this.httpClient.get(this.api_url+"find/").pipe((0,_rxjs.map)((e=>(0,_bibliothek.getAllBibliothekSuccess)({data:e}))),(0,_rxjs.catchError)((e=>(0,_rxjs.of)((0,_bibliothek.getAllBibliothekError)({error:e}))))))))))}})||_class;