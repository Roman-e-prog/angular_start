"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateForumAnswer=exports.getForumAnswer=exports.getAllForumAnswers=exports.getAllAnswersToQuestion=exports.forumAnswerSolved=exports.forumAnswerLikesCount=exports.forumAnswerDislikesCount=exports.deleteForumAnswer=exports.createForumAnswer=void 0;var _dbconnect=_interopRequireDefault(require("../db/dbconnect"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const createForumAnswer=async(e,s)=>{const{username:t,user_id:r,question_id:n,answer:o,answerername:u,answerer_id:a}=e.body;try{const e=await _dbconnect.default.query("INSERT INTO forumAnswers (username, user_id, question_id, answer, answerername, answerer_id, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING*",[t,r,n,o,u,a,new Date((new Date).toISOString()),new Date((new Date).toISOString())]);s.status(200).json(e.rows[0])}catch(e){s.status(403).json("Upload nicht möglich")}};exports.createForumAnswer=createForumAnswer;const updateForumAnswer=async(e,s)=>{const{answer:t}=e.body,r=e.params.id;try{const e=await _dbconnect.default.query("UPDATE forumAnswers SET answer = $1, updated_at = $2 WHERE id = $3",[t,new Date((new Date).toISOString()),r]);s.status(200).json(e.rows[0])}catch(e){s.status(404).json("Nicht gefunden")}};exports.updateForumAnswer=updateForumAnswer;const deleteForumAnswer=async(e,s)=>{const t=e.params.id;try{await _dbconnect.default.query("DELETE FROM forumAnswers WHERE id = $1",[t]),s.status(200).json(`Forumeintrag mit der id ${t} wurde gelöscht`)}catch(e){s.status(404).json("Nicht gefunden")}};exports.deleteForumAnswer=deleteForumAnswer;const getForumAnswer=async(e,s)=>{const t=e.params.id;try{const e=await _dbconnect.default.query("SELECT * FROM forumAnswers WHERE id = $1",[t]);s.status(200).json(e.rows[0])}catch(e){s.status(404).json("Nicht gefunden")}};exports.getForumAnswer=getForumAnswer;const getAllForumAnswers=async(e,s)=>{try{const e=await _dbconnect.default.query("SELECT * FROM forumAnswers");s.status(200).json(e.rows)}catch(e){s.status(404).json("Nicht gefunden")}};exports.getAllForumAnswers=getAllForumAnswers;const getAllAnswersToQuestion=async(e,s)=>{const t=e.params.id;try{const e=await _dbconnect.default.query("SELECT * FROM forumAnswers WHERE question_id = $1",[t]);s.status(200).json(e.rows)}catch(e){s.status(404).json("Nicht gefunden")}};exports.getAllAnswersToQuestion=getAllAnswersToQuestion;const forumAnswerLikesCount=async(e,s)=>{const t=e.body.id,r=e.body.user_id;try{await _dbconnect.default.query("UPDATE forumAnswers SET likes = likes + 1, like_ids = array_append(like_ids, $2) WHERE id = $1",[t,r]);const e=await _dbconnect.default.query("SELECT * FROM forumAnswers WHERE id = $1",[t]);s.status(200).json(e.rows[0])}catch(e){s.status(404).json("Not found")}};exports.forumAnswerLikesCount=forumAnswerLikesCount;const forumAnswerDislikesCount=async(e,s)=>{const t=e.body.id,r=e.body.user_id;if(t&&r)try{await _dbconnect.default.query("UPDATE forumAnswers SET dislikes = dislikes + 1, dislike_ids = array_append(dislike_ids, $2) WHERE id = $1",[t,r]);const e=await _dbconnect.default.query("SELECT * FROM forumAnswers WHERE id = $1",[t]);s.status(200).json(e.rows[0])}catch(e){s.status(404).json("Not found")}};exports.forumAnswerDislikesCount=forumAnswerDislikesCount;const forumAnswerSolved=async(e,s)=>{const t=e.body.id,r=e.body.question_id;try{await _dbconnect.default.query("UPDATE forumAnswers SET has_solved = true WHERE id = $1",[t]),await _dbconnect.default.query("UPDATE forum SET solved = true WHERE id = $1",[r]),s.status(200).json({success:!0,message:"hasSolved updated successfully"})}catch(e){s.status(404).json("Not found")}};exports.forumAnswerSolved=forumAnswerSolved;